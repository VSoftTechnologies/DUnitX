<t:IOTACreation xmlns:t="https://github.com/SeanBDurkin/DUnitX/template">
  <t:IOTACreator CreatorType="Unit">
    <t:CompilerVersion include="*"/>
    <t:Supports>IOTAModuleCreator</t:Supports>
    <t:IOTAFile filename="DUnitX.uExecutive.pas">
      <t:GetShowSource val="true"  />
      <t:FormFile      val="false" />
      <t:ImplSource    val="true" />
<t:stream xml:space="preserve">unit <t:module-name/>;
// The contents of this unit are dynamically generated by the DUnitX Wizard.
interface
uses DUnitX.BaseExecutive;

function AcquireExecutive: IExecutive;

implementation


uses Classes, DUnitX.IoC, DUnitX.TestFramework, DUnitX.TestRunner,
     DUnitX.ViewModel_Tree, DUnitX.viewModel_LoggerContainer
     <t:tree id="DxVTree">, DUnitX.uTestSuiteDxVirtualTree </t:tree>
     <t:tree id="VTree"  >, DUnitX.uTestSuiteVirtualTree </t:tree>
     <t:tree id="WinTree">, DUnitX.uTestSuiteTreeView </t:tree>
     // , DUnitX.Examples.General
     ;

type
TExecutive = class( TBaseExecutive)
  protected
    procedure RegisterTestFixtures;     override;
    procedure RegisterServices;         override;
    function  ApplicationTitle: string; override;
  end;


function AcquireExecutive: IExecutive;
begin
result := TExecutive.Create
end;

function TExecutive.ApplicationTitle: string;
begin
result := &apos;DUnitX Suite Runner: &apos; + &apos;<t:app-title/>&apos;
end;


procedure TExecutive.RegisterServices;
begin
inherited;

// Dynamic content
<t:tree id="DxVTree">
FServices.RegisterType&lt;IVisualTestSuiteTreeFactory&gt;(
  TTestSuiteVirtualTreeObj.IoCActivator(), &apos;&apos;);

</t:tree>
<t:tree id="VTree">
FServices.RegisterType&lt;IVisualTestSuiteTreeFactory&gt;(
  TTestSuiteVirtualTreeObj.IoCActivator(), &apos;&apos;);

</t:tree>
<t:tree id="WinTree">
FServices.RegisterType&lt;IVisualTestSuiteTreeFactory&gt;(
  TTestSuiteTreeViewObj.IoCActivator(), &apos;&apos;);

</t:tree>

// FServices.Resolve&lt;ILoggerCentral&gt;( &apos;&apos;).Loggers.Add(
//   TMyConcreteLoggerContainerFactory.Create)
end;

procedure TExecutive.RegisterTestFixtures;
begin
// Dynamic content
// TDUnitX.RegisterTestFixture( TMyExampleTests);

end;

end.</t:stream>
    </t:IOTAFile>
  </t:IOTACreator>
</t:IOTACreation>
