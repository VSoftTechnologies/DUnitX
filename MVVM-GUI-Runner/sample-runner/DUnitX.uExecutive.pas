unit DUnitX.uExecutive;
// The contents of this unit are dynamically generated by the DUnitX Wizard.
interface
uses DUnitX.BaseExecutive;

function AcquireExecutive: IExecutive;

implementation


uses Classes, DUnitX.SBD.uServiceProvider, DUnitX.TestFramework, DUnitX.TestRunner,
     DUnitX.ViewModel_Tree, DUnitX.viewModel_LoggerContainer,
     DUnitX.uTestSuiteVirtualTree,
     DUnitX.Examples.General
     ;

type
TExecutive = class( TBaseExecutive)
  protected
    procedure RegisterTestFixtures;    override;
    procedure RegisterServices;        override;
  end;


function AcquireExecutive: IExecutive;
begin
result := TExecutive.Create
end;

procedure TExecutive.RegisterServices;
begin
// Dynamic content
FServices.RegisterServiceClass( TTestSuiteVirtualTreeObj, IVisualTestSuiteTree);

// FServices.RegisterServiceClass( ILoggerContainerFactory, ?)
// FServices.ServiceAffinity[ ILoggerContainerFactory, ''] := afCooperative
end;

procedure TExecutive.RegisterTestFixtures;
begin
// Dynamic content
TDUnitX.RegisterTestFixture( TMyExampleTests);

end;


end.
